name: 'Provision'
 
on:
  workflow_dispatch: 
      inputs:
        deployment_name:
          required: true
          type: string
        user:
          required: true
          type: string
        user_id:
          required: true
          type: string
        message_id:
          required: true
          type: string
        msg:
          required: false
          type: string

 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VERSION: 1.5.7
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
#    - name: 'Terraform Format'
#      uses: hashicorp/terraform-github-actions@master
#      with:
#        tf_actions_version: ${{ env.TF_VERSION }}
#        tf_actions_subcommand: 'fmt'
#        tf_actions_working_dir: "./terraform"
         
    - name: 'Terraform Init with Variable Backend Key'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"
        args: '-backend-config="key=chatopsdemo-state-${{ inputs.deployment_name }}.tfstate"'

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform"
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.TF_VERSION }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"
        args: '-var="deployment_name=${{ inputs.deployment_name }}"'


# need to return state key not just deployment name
  chatops_channel-response:
    runs-on: ubuntu-latest
    steps:
      - name: Make REST Call
        run: | 
          curl -X POST "https://prod-21.centralus.logic.azure.com:443/workflows/1fbf0a3ec43243a9af04bd384bc86ce2/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=sA_uY0fsy-8AHTmdj0NqYlAmPttbM6al6tV4D7Pbdq4" \
          -H "Content-Type: application/json" \
          -d '{"status":"provisioned", "deployment_name":"chatopsdemo-state-${{ inputs.deployment_name }}", "user":"${{ inputs.user }}", "userId":"${{ inputs.user_id }}", "messageId":"${{ inputs.message_id }}", "msg":"${{ inputs.msg }}" }'
      